{"version":3,"sources":["components/Proxys/index.js","components/Proxys/Proxys.jsx","routes/Proxys.jsx"],"names":["Proxys","connect","state","proxysStore","dispatch","getproxysData","params","isReset","fetchPostsIfNeeded","addProxys","addProxysFetch","props","React","isModalVisible","setIsModalVisible","modalData","setModalData","columns","title","dataIndex","key","render","text","record","checked","enabled","onChange","axios","method","url","proxyId","data","then","res","onClick","danger","message","success","handleCancel","undefined","className","style","display","justifyContent","Title","level","type","rowKey","dataSource","items","destroyOnClose","width","footer","visible","onCancel","onFinish","values","initialValues","action","Item","name","label","placeholder","rules","required","addonBefore","addonAfter","marginBottom","Option","value","marginLeft","textAlign","htmlType","ProxysRoute"],"mappings":"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","file":"static/js/3.119af530.chunk.js","sourcesContent":["import Proxys from \"./Proxys\";\n\nexport default Proxys;\n","import * as React from \"react\";\nimport { connect } from 'react-redux'\nimport axios from 'axios'\nimport { Typography, Table, Switch, Button, Modal, Form, Input, Select, Space, message } from \"antd\"\nimport { fetchPostsIfNeeded, addProxysFetch } from \"../../reduxStore/proxysStore/actions\"\nconst Proxys = (props) => {\n  const [isModalVisible, setIsModalVisible] = React.useState(false);\n  const [modalData, setModalData] = React.useState();\n  const columns = [\n    {\n      title: 'Match',\n      dataIndex: 'match',\n      key: 'match',\n    },\n    {\n      title: 'Action',\n      dataIndex: 'action',\n      key: 'action',\n    },\n    {\n      title: 'Description',\n      dataIndex: 'description',\n      key: 'description',\n    },\n\n\n    {\n      title: 'Enabled',\n      key: 'Enabled',\n      render: (text, record) => {\n        return <Switch checked={record.enabled} onChange={(checked) => {\n          axios({\n            method: 'put',\n            url: `/CLI/WEB_CONFIG/proxys/${record.proxyId}`,\n            data: { enabled: checked }\n          }).then(res => {\n            props.getproxysData({}, true);\n          })\n        }} />\n      }\n    },\n    {\n      title: 'Opeartion',\n      key: 'description',\n      render: (text, record) => {\n        return <Space>\n          <Button onClick={() => {\n            setModalData(record);\n            setIsModalVisible(true);\n          }}>\n            修改\n          </Button>\n          <Button danger onClick={() => {\n            axios({\n              method: 'delete',\n              url: `/CLI/WEB_CONFIG/proxys/${record.proxyId}`,\n            }).then(res => {\n              message.success(\"删除成功！\");\n              props.getproxysData({}, true);\n\n            })\n          }}>\n            删除\n          </Button>\n        </Space>\n      }\n    },\n  ];\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n    setModalData(undefined);\n  };\n  const onFinish = (values) => {\n    const params = modalData ? { ...values, proxyId: modalData.proxyId } : values;\n    props.addProxys(params).then((res) => {\n      if (res.success) {\n        handleCancel();\n        props.getproxysData({}, true);\n      }\n    })\n  };\n  React.useEffect(() => {\n    props.getproxysData()\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n  return (\n    <div className=\"proxys\">\n      <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n        <Typography.Title level={4}>\n          Please configure open Proxys：\n        </Typography.Title>\n        <Button type=\"primary\" onClick={() => {\n          setIsModalVisible(true);\n        }}>Create new proxy</Button>\n      </div>\n      <Table rowKey={\"proxyId\"} dataSource={props.items || []} columns={columns} />\n      <Modal destroyOnClose width={800} title=\"Create new proxy\" footer={false} visible={isModalVisible} onCancel={handleCancel}>\n        <Form onFinish={onFinish} initialValues={{ action: \"forword\", ...modalData }}>\n          <Form.Item\n            name=\"description\"\n            label=\"Description\"\n          >\n            <Input placeholder=\"optional text to describe the goal of this proxy\" />\n          </Form.Item>\n          If request matches the following regexp\n          <Form.Item\n            name=\"match\"\n            rules={[\n              {\n                required: true,\n                message: 'Please input Match!',\n              },\n            ]}\n          >\n            <Input addonBefore=\"/\" addonAfter=\"/\" />\n          </Form.Item>\n          then\n          <Form.Item style={{ marginBottom: 0 }}>\n            <Form.Item\n              name=\"action\"\n              rules={[{ required: true }]}\n              style={{ display: 'inline-block', width: '180px' }}\n            >\n              <Select style={{ width: 180 }}>\n                <Select.Option value=\"forword\">\n                  forward it to remote\n                </Select.Option>\n              </Select>\n            </Form.Item>\n            <Form.Item\n              name=\"proxyUrl\"\n              rules={[\n                {\n                  required: true,\n                  message: 'Please input proxyUrl!',\n                },\n              ]}\n              style={{ display: 'inline-block', width: 'calc(100% - 188px)', marginLeft: '8px' }}\n            >\n              <Input placeholder=\"http://example.com\" />\n            </Form.Item>\n          </Form.Item>\n          <Form.Item style={{ textAlign: \"right\" }}>\n            <Space>\n              <Button onClick={handleCancel}>Cancel</Button>\n              {\n                !modalData ? <Button htmlType=\"submit\" type=\"primary\">Create</Button> :\n                  <Button htmlType=\"submit\" type=\"primary\">Update</Button>\n              }\n            </Space>\n          </Form.Item>\n        </Form>\n      </Modal>\n    </div>\n  );\n};\nconst mapStateToProps = state => {\n  return (state.proxysStore)\n}\nconst mapDispatchToProps = (dispatch) => ({\n  getproxysData: (params, isReset) => dispatch(fetchPostsIfNeeded(params, isReset)),\n  addProxys: (params) => dispatch(addProxysFetch(params))\n\n})\nexport default connect(mapStateToProps, mapDispatchToProps)(Proxys);","import * as React from \"react\";\n\nimport Proxys from \"../components/Proxys\";\n\n/**\n * 路由 - 首页\n * @constructor\n */\nconst ProxysRoute = () => {\n  return <Proxys />;\n};\n\nexport default ProxysRoute;\n"],"sourceRoot":""}